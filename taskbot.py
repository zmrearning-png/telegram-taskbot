print("Bot starting...")

from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

# рждрзЛржорж╛рж░ API Token
TOKEN = "8126823051:AAHyeJK1ACfn_eE2fOcVLwS89SIjHUk9q5I"

# Stages
PROOF1, PROOF2, PROOF3, PROOF4 = range(4)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    rules = """ЁЯУМ ржХрж╛ржЬрзЗрж░ ржирж┐рзЯржорж╛ржмрж▓рзА (ржнрж╛рж▓рзЛржнрж╛ржмрзЗ ржкрзЬрзЗ рждрж╛рж░ржкрж░ рж╢рзБрж░рзБ ржХрж░рзБржи)

1я╕ПтГг ржХрж╛ржЬ ржпрж╛ржЪрж╛ржЗрзЯрзЗрж░ ржкрж░ ржЦрзБржм ржжрзНрж░рзБрждржЗ ржкрзЗржорзЗржирзНржЯ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржмрзЗред ЁЯТ╕
2я╕ПтГг рж╢рзБржзрзБржорж╛рждрзНрж░ Firefox ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржорзЛржмрж╛ржЗрж▓ ржерзЗржХрзЗ Sign Up ржХрж░рзБржиред
3я╕ПтГг тЭМ Chrome ржмрж╛ ржЕржирзНржп ржХрзЛржирзЛ ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ Sign Up ржХрж░рж▓рзЗ ржХрж╛ржЬ ржЧрзНрж░рж╣ржгржпрзЛржЧрзНржп рж╣ржмрзЗ ржирж╛ред
4я╕ПтГг ржХрж╛ржЬ ржЕржмрж╢рзНржпржЗ ржорзЛржмрж╛ржЗрж▓ ржбрж┐ржнрж╛ржЗрж╕ ржерзЗржХрзЗ рж╕ржорзНржкржирзНржи ржХрж░рждрзЗ рж╣ржмрзЗред
5я╕ПтГг ржкрзНрж░рждрж┐ржЯрж┐ рж▓рж┐ржВржХрзЗ, ржкрзНрж░рждрж┐ ржбрж┐ржнрж╛ржЗрж╕ ржерзЗржХрзЗ рж╢рзБржзрзБ ржПржХржмрж╛рж░ржЗ Sign Up ржХрж░ржмрзЗржиред

тЪая╕П ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг:
ЁЯСЙ ржирж┐рзЯржо ржнржЩрзНржЧ ржХрж░рж▓рзЗ ржХрзЛржирзЛ ржЕржмрж╕рзНржерж╛рждрзЗржЗ ржкрзЗржорзЗржирзНржЯ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржмрзЗ ржирж╛ред
ЁЯСЙ ржХрж╛ржЬ рж╢рзБрж░рзБ ржХрж░рж╛рж░ ржЖржЧрзЗ ржирж┐рж░рзНржжрзЗрж╢ржирж╛ржЧрзБрж▓рзЛ ржнрж╛рж▓рзЛржнрж╛ржмрзЗ ржкрзЬрзЗ ржирж┐ржиред

рж▓рж┐ржВржХржЯрж┐ ржХржкрж┐ ржХрж░рзБржи ЁЯСЙ https://t.co/CZNr999lyj

ЁЯУЮ ржпрзЛржЧрж╛ржпрзЛржЧ: WhatsApp +8801326585409
"""
    await update.message.reply_text(rules)

async def submit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ЁЯУ╕ Screenshot 1 ржжрж┐ржи (Clear Browser Proof)")
    return PROOF1

async def proof1(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["proof1"] = update.message.photo[-1].file_id
    await update.message.reply_text("тЬЕ Screenshot 1 ржкрж╛ржУрзЯрж╛ ржЧрзЗржЫрзЗ!\nржПржЦржи Screenshot 2 ржжрж┐ржи (Link Paste Proof)")
    return PROOF2

async def proof2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["proof2"] = update.message.photo[-1].file_id
    await update.message.reply_text("тЬЕ Screenshot 2 ржкрж╛ржУрзЯрж╛ ржЧрзЗржЫрзЗ!\nржПржЦржи Screenshot 3 ржжрж┐ржи (Form Fill Proof)")
    return PROOF3

async def proof3(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["proof3"] = update.message.photo[-1].file_id
    await update.message.reply_text("тЬЕ Screenshot 3 ржкрж╛ржУрзЯрж╛ ржЧрзЗржЫрзЗ!\nржПржЦржи Screenshot 4 ржжрж┐ржи (Profile Complete Proof)")
    return PROOF4

async def proof4(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["proof4"] = update.message.photo[-1].file_id
    admin_id = 5825915140  # рждрзЛржорж╛рж░ ID
    user = update.message.from_user
    await context.bot.send_message(chat_id=admin_id, text=f"ЁЯФФ ржирждрзБржи ржХрж╛ржЬ ржЬржорж╛ ржжрж┐рзЯрзЗржЫрзЗ: @{user.username} (ID: {user.id})")
    for i in range(1, 5):
        await context.bot.send_photo(chat_id=admin_id, photo=context.user_data[f"proof{i}"])
    await update.message.reply_text("тЬЕ рж╕ржм Screenshot ржЬржорж╛ рж╣рзЯрзЗржЫрзЗ! 12-24 ржШржгрзНржЯрж╛рж░ ржоржзрзНржпрзЗ Payment ржкрж╛ржмрзЗржиред")
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("тЭМ Submission ржмрж╛рждрж┐рж▓ рж╣рзЯрзЗржЫрзЗред")
    return ConversationHandler.END

def main():
    app = Application.builder().token(TOKEN).build()
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("submit", submit)],
        states={
            PROOF1: [MessageHandler(filters.PHOTO, proof1)],
            PROOF2: [MessageHandler(filters.PHOTO, proof2)],
            PROOF3: [MessageHandler(filters.PHOTO, proof3)],
            PROOF4: [MessageHandler(filters.PHOTO, proof4)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )
    app.add_handler(CommandHandler("start", start))
    app.add_handler(conv_handler)
    app.run_polling()

if __name__ == "__main__":
    print("Bot is connecting to Telegram...")

    app = Application.builder().token(TOKEN).build()

    # Command handlers
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.PHOTO, proof1))

    print("Bot is running...")
    app.run_polling()

